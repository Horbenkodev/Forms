{"version":3,"sources":["src/components/UserItem.jsx"],"names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_Spinner","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","UserItem","_ref","avatar","gender","_useState","useState","_useState2","isImageLoaded","setIsImageLoaded","ref","useRef","observer","useEffect","current","IntersectionObserver","entries","forEach","item","setTimeout","isIntersecting","src","observe","disconnect","createElement","style","minHeight","className","loading","placeholderSrc","alt","propTypes","PropTypes","string","defaultProps"],"mappings":"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","file":"UserItem.f21c1f0c.js","sourceRoot":"..","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport placeholderSrc from '../img/Spinner.gif';\n\nexport default function UserItem({\n  name,\n  avatar,\n  gender,\n}) {\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const ref = useRef(null);\n  const observer = useRef(null);\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries) => {\n      entries.forEach((item) => {\n        setTimeout(() => {\n          if (item.isIntersecting) {\n            setIsImageLoaded(true);\n            ref.current.src = avatar;\n          }\n        }, 2000);\n      });\n    });\n\n    if (ref.current) {\n      observer.current.observe(ref.current);\n    }\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, []);\n  return (\n    <div style={{ minHeight: '120px' }} className=\"user-block\">\n      <img loading=\"lazy\" ref={ref} src={isImageLoaded ? avatar : placeholderSrc} alt={name} />\n      <div className=\"user-block_name\">{name}</div>\n      <div className=\"user-block_gender\">{gender}</div>\n    </div>\n  );\n}\n\nUserItem.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  gender: PropTypes.string,\n};\n\nUserItem.defaultProps = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  gender: PropTypes.string,\n};\n"]}